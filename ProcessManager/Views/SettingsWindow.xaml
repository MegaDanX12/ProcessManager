<Window x:Class="ProcessManager.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:p="clr-namespace:ProcessManager.Properties"
        xmlns:main="clr-namespace:ProcessManager"
        xmlns:converters="clr-namespace:ProcessManager.Converters"
        mc:Ignorable="d"
    Title="{x:Static p:Resources.SettingsWindowTitle}" Height="450" Width="804.87" ShowInTaskbar="False" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded">
    <Window.Resources>
        <converters:EnumToIntConverterOneWay x:Key="EnumToIntConverterOneWay"/>
    </Window.Resources>
    <Grid>
        <TabControl Margin="10,10,10,33">
            <TabItem Header="{x:Static p:Resources.SettingsWindowGeneralTabText}">
                <Grid Background="#FFE5E5E5">
                    <GroupBox Header="{x:Static p:Resources.SettingsWindowGeneralGroupboxText}" Height="161" VerticalAlignment="Top" Margin="10,10,10,0">
                        <Grid Margin="0">
                            <Label Content="{x:Static p:Resources.SettingsWindowProcessUpdateRateLabel}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0"/>
                            <CheckBox x:Name="SafeModeCheckbox" IsChecked="{Binding Path=(main:Settings.SafeMode)}" Content="{x:Static p:Resources.SettingsWindowSafeModeCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,41,0,0" Unchecked="SafeModeCheckbox_Unchecked"/>
                            <CheckBox x:Name="MemoryManipulationCheckbox" IsChecked="{Binding Path=(main:Settings.AllowProcessMemoryManipulation)}" Content="{x:Static p:Resources.SettingsWindowAllowProcessMemoryManipulationCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,61,0,0" Checked="MemoryManipulationCheckbox_Checked"/>
                            <CheckBox x:Name="ServiceMonitoringCheckbox" IsChecked="{Binding Path=(main:Settings.ServiceMonitoringEnabled)}" Content="{x:Static p:Resources.SettingsWindowServiceMonitoringCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,81,0,0"/>
                            <TextBox x:Name="DataUpdateRateTextbox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="375" Margin="185,14,0,0" Text="{Binding Path=(main:Settings.ProcessDataUpdateRate)}"/>
                            <Label Content="{x:Static p:Resources.SettingsWindowProcessUpdateRateMillisecondsLabel}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="565,10,0,0"/>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{x:Static p:Resources.SettingsWindowDataSourceLabel}" VerticalAlignment="Top" Margin="10,104,0,0"/>
                            <ComboBox x:Name="DataSourceCombobox" SelectedIndex="{Binding Path=(main:Settings.DataSource), Converter={StaticResource EnumToIntConverterOneWay}, Mode=OneWay}" IsReadOnly="True" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="91,101,0,0">
                                <ComboBoxItem Content="WMI"/>
                                <ComboBoxItem Content="ETW"/>
                            </ComboBox>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="{x:Static p:Resources.SettingsWindowShutdownLogoffGroupboxText}" Height="139" VerticalAlignment="Top" Margin="10,176,10,0">
                        <Grid>
                            <CheckBox x:Name="ForceLogoffIfHungCheckbox" IsChecked="{Binding Path=(main:Settings.ForceLogOffIfHung)}" Content="{x:Static p:Resources.SettingsWindowForceLogoffIfHungCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0"/>
                            <CheckBox x:Name="ForceOtherSessionsLogOffOnShutdownCheckbox" IsChecked="{Binding Path=(main:Settings.ForceOtherSessionsLogOffOnShutdown)}" Content="{x:Static p:Resources.SettingsWindowForceOtherSessionsLogoffOnShutdownCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,30,0,0"/>
                            <CheckBox x:Name="ForceCurrentSessionsLogOffOnShutdownCheckbox" IsChecked="{Binding Path=(main:Settings.ForceCurrentSessionLogOffOnShutdown)}" Content="{x:Static p:Resources.SettingsWindowForceCurrentSessionLogoffOnShutdownCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,50,0,0"/>
                            <CheckBox x:Name="InstallUpdatesBeforeShutdownCheckbox" IsChecked="{Binding Path=(main:Settings.InstallUpdatesBeforeShutdown)}" Content="{x:Static p:Resources.SettingsWindowInstallUpdatesBeforeShutdownCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,70,0,0"/>
                            <CheckBox x:Name="ManualPowerDownCheckbox" IsChecked="{Binding Path=(main:Settings.ManualPowerDown)}" Content="{x:Static p:Resources.SettingsWindowManualPowerDownCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,90,0,0"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Logging">
                <Grid Background="#FFE5E5E5">
                    <CheckBox x:Name="LoggingEnabledCheckbox" IsChecked="{Binding Path=(main:Settings.LogProgramActivity)}" Content="{x:Static p:Resources.SettingsWindowLogProgramActivityCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0"/>
                    <Label Content="{x:Static p:Resources.SettingsWindowLogsPathLabel}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,50,0,0">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LoggingEnabledCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <CheckBox x:Name="KeepOldLogsCheckbox" IsChecked="{Binding Path=(main:Settings.KeepOldLogs)}" Content="{x:Static p:Resources.SettingsWindowKeepOldLogsCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,30,0,0">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LoggingEnabledCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <Label Content="{x:Static p:Resources.SettingsWindowMaxLogSizeLabel}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,81,0,0">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LoggingEnabledCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <TextBox x:Name="LogsPathTextbox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Path=(main:Settings.LogsPath)}" VerticalAlignment="Top" Width="603" Margin="160,54,0,0">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LoggingEnabledCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBox x:Name="MaxLogSizeTextbox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Path=(main:Settings.MaxLogSize)}" VerticalAlignment="Top" Width="550" Margin="160,85,0,0">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LoggingEnabledCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Label Content="(in MB)" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="715,81,0,0">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LoggingEnabledCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Label Content="{x:Static p:Resources.SettingsWindowLoggingLevelLabel}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,112,0,0">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LoggingEnabledCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <ComboBox SelectedItem="{Binding Path=(main:Settings.LoggingLevel)}" x:Name="LogLevelCombobox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="603" Margin="160,116,0,0" IsReadOnly="True">
                        <ComboBox.Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LoggingEnabledCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static p:Resources.SettingsWindowUpdateTabText}">
                <Grid Background="#FFE5E5E5">
                    <CheckBox x:Name="AutomaticUpdateCheckCheckbox" IsChecked="{Binding Path=(main:Settings.AutomaticUpdatesCheck), Mode=OneWay}" Content="{x:Static p:Resources.SettingsWindowAutomaticUpdatesCheckCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0"/>
                    <Label Content="{x:Static p:Resources.SettingsWindowUpdateCheckRateLabel}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,30,0,0">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Label Content="{x:Static p:Resources.SettingsWindowUpdateHourLabel}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,61,0,0">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Label Content="{x:Static p:Resources.SettingsWindowUpdateDayOfWeekLabel}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,92,0,0">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <CheckBox x:Name="DownloadOnlyCheckbox" IsChecked="{Binding Path=(main:Settings.UpdateDownloadOnly), Mode=OneWay}" Content="{x:Static p:Resources.SettingsWindowUpdateDownloadOnlyCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,123,0,0">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <CheckBox x:Name="UpdateCompletedDownloadNotificationsCheckbox" IsChecked="{Binding Path=(main:Settings.UpdateDownloadCompletedNotifications), Mode=OneWay}" Content="{x:Static p:Resources.SettingsWindowUpdateDownloadCompleteNotificationsCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,143,0,0">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <CheckBox x:Name="UpdateDownloadAfterConfirmationCheckbox" IsChecked="{Binding Path=(main:Settings.UpdateDownloadAfterConfirmation), Mode=OneWay}" Content="{x:Static p:Resources.SettingsWindowUpdateDownloadAfterConfirmationCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,163,0,0">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <CheckBox x:Name="UpdateInstallStartedNotificationsCheckbox" IsChecked="{Binding Path=(main:Settings.UpdateInstallStartedNotifications), Mode=OneWay}" Content="{x:Static p:Resources.SettingsWindowUpdateInstallStartedNotificationsCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,183,0,0">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True"/>
                                            <Condition Binding="{Binding ElementName=DownloadOnlyCheckbox, Path=IsChecked}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <CheckBox x:Name="UpdateInstallAfterConfirmationCheckbox" IsChecked="{Binding Path=(main:Settings.UpdateInstallAfterConfirmation), Mode=OneWay}" Content="{x:Static p:Resources.SettingsWindowUpdateInstallAfterConfirmationCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,203,0,0">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True"/>
                                            <Condition Binding="{Binding ElementName=DownloadOnlyCheckbox, Path=IsChecked}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <CheckBox x:Name="RestartAfterUpdateCheckbox" IsChecked="{Binding Path=(main:Settings.RestartAfterUpdate), Mode=OneWay}" Content="{x:Static p:Resources.SettingsWindowRestartAfterUpdateCheckboxText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,223,0,0">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True"/>
                                            <Condition Binding="{Binding ElementName=DownloadOnlyCheckbox, Path=IsChecked}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <ComboBox x:Name="UpdateCheckRateCombobox" SelectedIndex="{Binding Path=(main:Settings.UpdateCheckRate), Converter={StaticResource EnumToIntConverterOneWay}, Mode=OneWay}" IsReadOnly="True" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="227,34,0,0">
                        <ComboBoxItem Content="{x:Static p:Resources.UpdateDailyText}"/>
                        <ComboBoxItem Content="{x:Static p:Resources.UpdateWeeklyText}"/>
                        <ComboBoxItem Content="{x:Static p:Resources.UpdateMonthlyText}"/>
                        <ComboBox.Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                    <TextBox x:Name="UpdateHourTextbox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Path=(main:Settings.UpdateHour), StringFormat=HH:mm, Mode=OneWay}" VerticalAlignment="Top" Width="202" Margin="145,65,0,0">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Label Content="(hh:mm, 24-hour)" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="352,61,0,0">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <ComboBox x:Name="UpdateWeekDayCombobox" SelectedIndex="{Binding Path=(main:Settings.UpdateDayOfWeek), Converter={StaticResource EnumToIntConverterOneWay}, Mode=OneWay}" IsReadOnly="True" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="64,96,0,0">
                        <ComboBoxItem Content="{x:Static p:Resources.MondayText}"/>
                        <ComboBoxItem Content="{x:Static p:Resources.TuesdayText}"/>
                        <ComboBoxItem Content="{x:Static p:Resources.WednesdayText}"/>
                        <ComboBoxItem Content="{x:Static p:Resources.ThursdayText}"/>
                        <ComboBoxItem Content="{x:Static p:Resources.FridayText}"/>
                        <ComboBoxItem Content="{x:Static p:Resources.SaturdayText}"/>
                        <ComboBoxItem Content="{x:Static p:Resources.SundayText}"/>
                        <ComboBox.Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutomaticUpdateCheckCheckbox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </Grid>
            </TabItem>
        </TabControl>
        <Button x:Name="CancelButton" Content="{x:Static p:Resources.CancelButtonText}" Margin="0,0,10,10" Click="CancelButton_Click" VerticalAlignment="Bottom" ScrollViewer.VerticalScrollBarVisibility="Disabled" IsCancel="True" Padding="0" HorizontalAlignment="Right" MinWidth="75"/>
        <Button x:Name="OKButton" Content="OK" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="75" Margin="10,0,0,10" Click="OKButton_Click" ScrollViewer.VerticalScrollBarVisibility="Disabled" IsDefault="True" Padding="0"/>
    </Grid>
</Window>